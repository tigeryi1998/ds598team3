{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Team3df"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"GitHub_credential": {
			"type": "secureString",
			"metadata": "Secure string for 'credential' of 'GitHub'"
		},
		"GitHub1_credential": {
			"type": "secureString",
			"metadata": "Secure string for 'credential' of 'GitHub1'"
		},
		"HttpServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HttpServer1'"
		},
		"NHTSA_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'NHTSA'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ds598team3.dfs.core.windows.net/"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://Team3KeyVault.vault.azure.net/"
		},
		"Earthquake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://earthquake.usgs.gov/fdsnws/event/1/"
		},
		"GitHub_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tigeryi1998"
		},
		"GitHub1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "azthorp"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mbta-massdot.opendata.arcgis.com"
		},
		"HttpServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "team3"
		},
		"NHTSA_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://static.nhtsa.gov"
		},
		"NHTSA_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "team_3"
		},
		"HistoricalPollution_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": " http://api.openweathermap.org/"
		},
		"HistoricalPollution_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Team3"
		},
		"HistoricalWeather_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://history.openweathermap.org/"
		},
		"HistoricalWeather_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Team3"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Earthquake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Earthquake_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GitHub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "GitHub",
				"typeProperties": {
					"username": "[parameters('GitHub_properties_typeProperties_username')]",
					"credential": {
						"type": "SecureString",
						"value": "[parameters('GitHub_credential')]"
					},
					"encryptedCredential": "ew0KICAiVmVyc2lvbiI6ICIyMDE3LTExLTMwIiwNCiAgIlByb3RlY3Rpb25Nb2RlIjogIktleSIsDQogICJTZWNyZXRDb250ZW50VHlwZSI6ICJQbGFpbnRleHQiLA0KICAiQ3JlZGVudGlhbElkIjogIkRBVEFGQUNUT1JZQDEyQTkxNzBGLTE0OEItNDVEQi1BNkU4LUZFNjhBMTM3NTY0RV84N2YzZGU0Zi01ZDM3LTRhOWQtYTA5ZC1iZmVhYThlOTc0NTYiDQp9"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GitHub1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "GitHub",
				"typeProperties": {
					"username": "[parameters('GitHub1_properties_typeProperties_username')]",
					"credential": {
						"type": "SecureString",
						"value": "[parameters('GitHub1_credential')]"
					},
					"encryptedCredential": "ew0KICAiVmVyc2lvbiI6ICIyMDE3LTExLTMwIiwNCiAgIlByb3RlY3Rpb25Nb2RlIjogIktleSIsDQogICJTZWNyZXRDb250ZW50VHlwZSI6ICJQbGFpbnRleHQiLA0KICAiQ3JlZGVudGlhbElkIjogIkRBVEFGQUNUT1JZQDEyQTkxNzBGLTE0OEItNDVEQi1BNkU4LUZFNjhBMTM3NTY0RV9lYWQ0MWY3Zi1mNTVmLTQ1OWItOGFmNy0yZDFjNGM1N2E0OWUiDQp9"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('HttpServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HttpServer1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NHTSA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('NHTSA_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('NHTSA_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('NHTSA_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AirPollution')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/Weather/UpdatedHistoricalWeather",
						"fileSystem": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"coord": {
							"type": "object",
							"properties": {
								"lon": {
									"type": "number"
								},
								"lat": {
									"type": "number"
								}
							}
						},
						"list": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"main": {
										"type": "object",
										"properties": {
											"aqi": {
												"type": "integer"
											}
										}
									},
									"components": {
										"type": "object",
										"properties": {
											"co": {
												"type": "number"
											},
											"no": {
												"type": "integer"
											},
											"no2": {
												"type": "number"
											},
											"o3": {
												"type": "number"
											},
											"so2": {
												"type": "number"
											},
											"pm2_5": {
												"type": "number"
											},
											"pm10": {
												"type": "number"
											},
											"nh3": {
												"type": "number"
											}
										}
									},
									"dt": {
										"type": "integer"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HistoricalWeather')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/Weather/UpdatedHistoricalWeather",
						"fileSystem": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"message": {
							"type": "string"
						},
						"cod": {
							"type": "string"
						},
						"city_id": {
							"type": "integer"
						},
						"calctime": {
							"type": "number"
						},
						"cnt": {
							"type": "integer"
						},
						"list": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"dt": {
										"type": "integer"
									},
									"main": {
										"type": "object",
										"properties": {
											"temp": {
												"type": "number"
											},
											"feels_like": {
												"type": "number"
											},
											"pressure": {
												"type": "integer"
											},
											"humidity": {
												"type": "integer"
											},
											"temp_min": {
												"type": "number"
											},
											"temp_max": {
												"type": "number"
											}
										}
									},
									"wind": {
										"type": "object",
										"properties": {
											"speed": {
												"type": "number"
											},
											"deg": {
												"type": "integer"
											},
											"gust": {
												"type": "number"
											}
										}
									},
									"clouds": {
										"type": "object",
										"properties": {
											"all": {
												"type": "integer"
											}
										}
									},
									"weather": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"type": "integer"
												},
												"main": {
													"type": "string"
												},
												"description": {
													"type": "string"
												},
												"icon": {
													"type": "string"
												}
											}
										}
									},
									"rain": {
										"type": "object",
										"properties": {
											"1h": {
												"type": "number"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"message": {
							"type": "string"
						},
						"cod": {
							"type": "string"
						},
						"city_id": {
							"type": "integer"
						},
						"calctime": {
							"type": "number"
						},
						"cnt": {
							"type": "integer"
						},
						"list": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"dt": {
										"type": "integer"
									},
									"main": {
										"type": "object",
										"properties": {
											"temp": {
												"type": "number"
											},
											"feels_like": {
												"type": "number"
											},
											"pressure": {
												"type": "integer"
											},
											"humidity": {
												"type": "integer"
											},
											"temp_min": {
												"type": "number"
											},
											"temp_max": {
												"type": "number"
											}
										}
									},
									"wind": {
										"type": "object",
										"properties": {
											"speed": {
												"type": "number"
											},
											"deg": {
												"type": "integer"
											},
											"gust": {
												"type": "number"
											}
										}
									},
									"clouds": {
										"type": "object",
										"properties": {
											"all": {
												"type": "integer"
											}
										}
									},
									"weather": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"type": "integer"
												},
												"main": {
													"type": "string"
												},
												"description": {
													"type": "string"
												},
												"icon": {
													"type": "string"
												}
											}
										}
									},
									"rain": {
										"type": "object",
										"properties": {
											"1h": {
												"type": "number"
											}
										}
									}
								}
							}
						},
						"data": {
							"type": "object",
							"properties": {
								"stations": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"station_id": {
												"type": "string"
											},
											"ebikes": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"make_and_model": {
															"type": "string"
														},
														"displayed_number": {
															"type": "string"
														},
														"range_estimate": {
															"type": "object",
															"properties": {
																"conservative_range_miles": {
																	"type": "number"
																},
																"estimated_range_miles": {
																	"type": "number"
																}
															}
														},
														"rideable_id": {
															"type": "string"
														},
														"is_lbs_internal_rideable": {
															"type": "boolean"
														},
														"docking_capability": {
															"type": "integer"
														},
														"battery_charge_percentage": {
															"type": "integer"
														}
													}
												}
											}
										}
									}
								},
								"en": {
									"type": "object",
									"properties": {
										"feeds": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													},
													"url": {
														"type": "string"
													}
												}
											}
										}
									}
								},
								"fr": {
									"type": "object",
									"properties": {
										"feeds": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													},
													"url": {
														"type": "string"
													}
												}
											}
										}
									}
								},
								"es": {
									"type": "object",
									"properties": {
										"feeds": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													},
													"url": {
														"type": "string"
													}
												}
											}
										}
									}
								},
								"plans": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"description": {
												"type": "string"
											},
											"price": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"currency": {
												"type": "string"
											},
											"is_taxable": {
												"type": "boolean"
											},
											"plan_id": {
												"type": "string"
											}
										}
									}
								},
								"regions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"region_id": {
												"type": "string"
											},
											"name": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"last_updated": {
							"type": "integer"
						},
						"ttl": {
							"type": "integer"
						},
						"version": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ride_id",
						"type": "String"
					},
					{
						"name": "rideable_type",
						"type": "String"
					},
					{
						"name": "started_at",
						"type": "String"
					},
					{
						"name": "ended_at",
						"type": "String"
					},
					{
						"name": "start_station_name",
						"type": "String"
					},
					{
						"name": "start_station_id",
						"type": "String"
					},
					{
						"name": "end_station_name",
						"type": "String"
					},
					{
						"name": "end_station_id",
						"type": "String"
					},
					{
						"name": "start_lat",
						"type": "String"
					},
					{
						"name": "start_lng",
						"type": "String"
					},
					{
						"name": "end_lat",
						"type": "String"
					},
					{
						"name": "end_lng",
						"type": "String"
					},
					{
						"name": "member_casual",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransportationData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/datasets/80a379ebaa374cfd836ca4d3880ceda4_0/explore"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": null
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_pollution')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver",
						"fileSystem": "data"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver_weather')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver",
						"fileSystem": "data"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ride_id",
						"type": "UTF8"
					},
					{
						"name": "rideable_type",
						"type": "UTF8"
					},
					{
						"name": "started_at",
						"type": "TIMESTAMP_MICROS"
					},
					{
						"name": "ended_at",
						"type": "TIMESTAMP_MICROS"
					},
					{
						"name": "start_station_name",
						"type": "UTF8"
					},
					{
						"name": "start_station_id",
						"type": "UTF8"
					},
					{
						"name": "end_station_name",
						"type": "UTF8"
					},
					{
						"name": "end_station_id",
						"type": "UTF8"
					},
					{
						"name": "start_lat",
						"type": "DOUBLE"
					},
					{
						"name": "start_lng",
						"type": "DOUBLE"
					},
					{
						"name": "end_lat",
						"type": "DOUBLE"
					},
					{
						"name": "end_lng",
						"type": "DOUBLE"
					},
					{
						"name": "member_casual",
						"type": "UTF8"
					},
					{
						"name": "is_bike_lost",
						"type": "INT64"
					},
					{
						"name": "is_return_to_dock",
						"type": "INT64"
					},
					{
						"name": "is_start_from_dock",
						"type": "INT64"
					},
					{
						"name": "distance",
						"type": "DOUBLE"
					},
					{
						"name": "duration",
						"type": "DOUBLE"
					},
					{
						"name": "speed_ms",
						"type": "DOUBLE"
					},
					{
						"name": "speed_kmh",
						"type": "DOUBLE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/weathersample')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "example_weather.json",
						"folderPath": "bronze/Weather",
						"fileSystem": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"message": {
							"type": "string"
						},
						"cod": {
							"type": "string"
						},
						"city_id": {
							"type": "integer"
						},
						"calctime": {
							"type": "number"
						},
						"cnt": {
							"type": "integer"
						},
						"list": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"dt": {
										"type": "integer"
									},
									"main": {
										"type": "object",
										"properties": {
											"temp": {
												"type": "number"
											},
											"feels_like": {
												"type": "number"
											},
											"pressure": {
												"type": "integer"
											},
											"humidity": {
												"type": "integer"
											},
											"temp_min": {
												"type": "number"
											},
											"temp_max": {
												"type": "number"
											}
										}
									},
									"wind": {
										"type": "object",
										"properties": {
											"speed": {
												"type": "number"
											},
											"deg": {
												"type": "integer"
											},
											"gust": {
												"type": "number"
											}
										}
									},
									"clouds": {
										"type": "object",
										"properties": {
											"all": {
												"type": "integer"
											}
										}
									},
									"weather": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"type": "integer"
												},
												"main": {
													"type": "string"
												},
												"description": {
													"type": "string"
												},
												"icon": {
													"type": "string"
												}
											}
										}
									},
									"rain": {
										"type": "object",
										"properties": {
											"1h": {
												"type": "number"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HistoricalPollution')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HistoricalPollution_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('HistoricalPollution_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "OpenWeatherKey"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HistoricalWeather')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HistoricalWeather_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('HistoricalWeather_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "OpenWeatherKey"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HistoricalPollutionIngest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HistoricalPollution",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"lat": {
						"type": "float",
						"defaultValue": 42.36
					},
					"lon": {
						"type": "float",
						"defaultValue": 71.06
					},
					"appid": {
						"type": "string",
						"defaultValue": "@activity('Web1').output.value"
					},
					"Start": {
						"type": "int",
						"defaultValue": 1701406800
					},
					"End": {
						"type": "int",
						"defaultValue": 1733029200
					},
					"dataType": {
						"type": "string",
						"defaultValue": "hour"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "data/2.5/air_pollution/history?lat=@{dataset().lat}&lon=@{dataset().lon}&start=@{dataset().start}&end=@{dataset().end}&appid=@{dataset().appid}",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HistoricalPollution')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HistoricalWeatherIngest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HistoricalWeather",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dataType": {
						"type": "string",
						"defaultValue": "hour"
					},
					"lat": {
						"type": "float",
						"defaultValue": 42.36
					},
					"lon": {
						"type": "float",
						"defaultValue": 71.06
					},
					"appid": {
						"type": "string",
						"defaultValue": "@activity('Web1').output.value"
					},
					"start": {
						"type": "string",
						"defaultValue": "@item().start"
					},
					"end": {
						"type": "string",
						"defaultValue": "@item().end"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "data/2.5/history/city?lat=@{dataset().lat}&lon=@{dataset().lon}&type=@{dataset().dataType}&start=@{dataset().start}&end=@{dataset().end}&appid=@{dataset().appid}",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HistoricalWeather')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Air_Pollution_Historical')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AirPollution",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "silver_pollution",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          coord as (lon as double, lat as double),",
						"          list as (main as (aqi as integer), components as (co as double, no as integer, no2 as double, o3 as double, so2 as double, pm2_5 as double, pm10 as double, nh3 as double), dt as integer)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> source1",
						"source1 foldDown(unroll(list, list),",
						"     mapColumn(",
						"          lon = coord.lon,",
						"          lat = coord.lat,",
						"          aqi = list.main.aqi,",
						"          timestamp = list.dt,",
						"          co = list.components.co,",
						"          no = list.components.no,",
						"          no2 = list.components.no2,",
						"          o3 = list.components.o3,",
						"          so2 = list.components.so2,",
						"          pm2_5 = list.components.pm2_5,",
						"          pm10 = list.components.pm10,",
						"          nh3 = list.components.nh3",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 derive(corrected_timestamp = iif(length(toString(timestamp)) == 10, toInteger(timestamp), toInteger(null())),",
						"          location = 'Boston') ~> derivedColumn1",
						"derivedColumn1 filter((!isNull(corrected_timestamp))&&(!isNull(aqi))) ~> filter1",
						"filter1 derive(date_time = toTimestamp(toLong(corrected_timestamp) * 1000),",
						"          id = concat(location, toString(corrected_timestamp)),",
						"          co = round(co,2),",
						"          no = round(no,2),",
						"          no2 = round(no2,2),",
						"          o3 = round(o3,2),",
						"          so2 = round(so2,2),",
						"          pm2_5 = round(pm2_5,2),",
						"          pm10 = round(pm10,2),",
						"          nh3 = round(nh3,2)) ~> derivedColumn2",
						"derivedColumn2 select(mapColumn(",
						"          lon,",
						"          lat,",
						"          aqi,",
						"          co,",
						"          no,",
						"          no2,",
						"          o3,",
						"          so2,",
						"          pm2_5,",
						"          pm10,",
						"          nh3,",
						"          corrected_timestamp,",
						"          location,",
						"          date_time,",
						"          id",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['pollution_silver.parquet'],",
						"     umask: 0770,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AirPollution')]",
				"[concat(variables('factoryId'), '/datasets/silver_pollution')]"
			]
		}
	]
}